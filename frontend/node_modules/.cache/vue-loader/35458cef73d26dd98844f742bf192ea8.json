{"remainingRequest":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\src\\components\\Troskovi.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\src\\components\\Troskovi.vue","mtime":1566594770000},{"path":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\struc\\OneDrive\\Radna površina\\novo\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport Vue from 'vue'\nimport Obavijest from './Obavijest.vue'\n\nVue.filter('valuta', function (value) {\n  return value.toFixed(2) + 'HRK'\n})\n\nexport default {\n  data () {\n    return {\n      troskovi: [],\n      dodajTrosakForm: {\n        naziv: '',\n        kategorija: '',\n        iznos: 0\n      },\n      message: '',\n      showMessage: false,\n      izmjTrosakForm: {\n        id: '',\n        naziv: '',\n        kategorija: '',\n        iznos: 0\n      }\n    }\n  },\n  components: {\n    obavijest: Obavijest\n  },\n  methods: {\n    dohvatiTroskove () {\n      const path = 'http://localhost:5000/troskovi'\n      axios.get(path)\n        .then((response) => {\n          this.troskovi = response.data.troskovi\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    },\n    dodajTrosak (noviTrosak) {\n      const path = 'http://localhost:5000/troskovi'\n      axios.post(path, noviTrosak)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Dodan trosak'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          console.log(error)\n          this.dohvatiTroskove()\n        })\n    },\n\n    promjenaTroska (trosak) {\n      this.izmjTrosakForm = trosak\n      this.izmjTrosakForm.id = trosak.id\n    },\n\n    initForm () {\n      this.dodajTrosakForm.naziv = ''\n      this.dodajTrosakForm.kategorija = ''\n      this.dodajTrosakForm.iznos = ''\n      this.izmjTrosakForm.id = ''\n      this.izmjTrosakForm.naziv = ''\n      this.izmjTrosakForm.kategorija = ''\n      this.izmjTrosakForm.iznos = ''\n    },\n    onSubmit (evt) {\n      evt.preventDefault()\n      this.$refs.dodajTrosakModal.hide()\n      const noviTrosak = {\n        naziv: this.dodajTrosakForm.naziv,\n        kategorija: this.dodajTrosakForm.kategorija,\n        iznos: this.dodajTrosakForm.iznos\n      }\n      this.dodajTrosak(noviTrosak)\n      this.initForm()\n    },\n    onReset (evt) {\n      evt.preventDefault()\n      this.$refs.dodajTrosakModal.hide()\n      this.initForm()\n    },\n\n    onSubmitUpdate (evt) {\n      evt.preventDefault()\n      this.$refs.izmjTroskaModal.hide()\n      const noviTrosak = {\n        id: this.izmjTrosakForm.id,\n        naziv: this.izmjTrosakForm.naziv,\n        kategorija: this.izmjTrosakForm.kategorija,\n        iznos: this.izmjTrosakForm.iznos\n      }\n      this.zamjeniTrosak(noviTrosak, this.izmjTrosakForm.id)\n    },\n\n    onResetUpdate (evt) {\n      evt.preventDefault()\n      this.$refs.izmjTroskaModal.hide()\n      this.initForm()\n      this.dohvatiTroskove() // why?\n    },\n\n    zamjeniTrosak (noviTrosak, trosakID) {\n      const path = `http://localhost:5000/troskovi/${trosakID}`\n      axios.put(path, noviTrosak)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Trosak izmijenjen'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error)\n          this.dohvatiTroskove()\n        })\n    },\n\n    izbrisiTrosak (trosakID) {\n      const path = `http://localhost:5000/troskovi/${trosakID}`\n      axios.delete(path)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Trosak izbrisan!'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error)\n          this.dohvatiTroskove()\n        })\n    },\n    onIzbrisiTrosak (trosak) {\n      this.izbrisiTrosak(trosak.id)\n    }\n  },\n  created () {\n    this.dohvatiTroskove()\n  }\n}\n",{"version":3,"sources":["Troskovi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Troskovi.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>Troskovi</h1>\n        <hr>\n        <br><br>\n\n        <obavijest :message=\"message\" v-if=\"showMessage\"></obavijest>\n\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.trosak-modal>Dodaj Trosak</button>\n\n        <br><br>\n        <table class=\"table table-hover\">\n          <thead>\n          <tr>\n            <th scope=\"col\">Naziv</th>\n            <th scope=\"col\">Kategorija</th>\n            <th scope=\"col\">Iznos</th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"(trosak, index) in troskovi\" :key=\"index\">\n            <td>{{ trosak.naziv}}</td>\n            <td>{{ trosak.kategorija}}</td>\n            <td>{{ trosak.iznos | valuta}}</td>\n            <td>\n              <div class=\"btn-group\" role=\"group\">\n\n                <button type=\"button\" class=\"btn btn-warning btn-sm\" v-b-modal.izmjena-modal @click=\"promjenaTroska(trosak)\">Update</button>\n\n                <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"onIzbrisiTrosak(trosak)\">Delete</button>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <b-modal class=\"formaUnos\" ref=\"dodajTrosakModal\"\n             id=\"trosak-modal\"\n             title=\"Dodaj novi trosak\"\n             hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-naziv-group\"\n                      label=\"Naziv:\"\n                      label-for=\"form-naziv-input\">\n          <b-form-input id=\"form-naziv-input\"\n                        type=\"text\"\n                        v-model=\"dodajTrosakForm.naziv\"\n                        required\n                        placeholder=\"Unesi naziv\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-kategorija-group\"\n                      label=\"Kategorija:\"\n                      label-for=\"form-kategorija-input\">\n          <b-form-input id=\"form-kategorija-input\"\n                        type=\"text\"\n                        v-model=\"dodajTrosakForm.kategorija\"\n                        required\n                        placeholder=\"Unesi kategoriju\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-iznos-group\"\n                      label=\"Iznos:\"\n                      label-for=\"form-iznos-input\">\n          <b-form-input id=\"form-iznos-input\"\n                        type=\"number\"\n                        v-model=\"dodajTrosakForm.iznos\"\n                        required\n                        placeholder=\"Unesi iznos\">\n          </b-form-input>\n        </b-form-group>\n\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n\n    <b-modal ref=\"izmjTroskaModal\"\n             id=\"izmjena-modal\"\n             title=\"Izmjena troska\"\n             hide-footer>\n      <b-form @submit=\"onSubmitUpdate\" @reset=\"onResetUpdate\" class=\"w-100\">\n        <b-form-group id=\"form-title-edit-group\"\n                      label=\"Naziv:\"\n                      label-for=\"form-title-edit-input\">\n          <b-form-input id=\"form-title-edit-input\"\n                        type=\"text\"\n                        v-model=\"izmjTrosakForm.naziv\"\n                        required\n                        placeholder=\"Unesi novi naziv\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-edit-group\"\n                      label=\"Kategorija:\"\n                      label-for=\"form-author-edit-input\">\n          <b-form-input id=\"form-author-edit-input\"\n                        type=\"text\"\n                        v-model=\"izmjTrosakForm.kategorija\"\n                        required\n                        placeholder=\"Unesi novu kategoriju\">\n          </b-form-input>\n        </b-form-group>\n\n        <b-form-group id=\"form-author-edit-group\"\n                      label=\"Iznos:\"\n                      label-for=\"form-author-edit-input\">\n          <b-form-input id=\"form-author-edit-input\"\n                        type=\"text\"\n                        v-model=\"izmjTrosakForm.iznos\"\n                        required\n                        placeholder=\"Unesi novi iznos\">\n          </b-form-input>\n        </b-form-group>\n\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Cancel</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Vue from 'vue'\nimport Obavijest from './Obavijest.vue'\n\nVue.filter('valuta', function (value) {\n  return value.toFixed(2) + 'HRK'\n})\n\nexport default {\n  data () {\n    return {\n      troskovi: [],\n      dodajTrosakForm: {\n        naziv: '',\n        kategorija: '',\n        iznos: 0\n      },\n      message: '',\n      showMessage: false,\n      izmjTrosakForm: {\n        id: '',\n        naziv: '',\n        kategorija: '',\n        iznos: 0\n      }\n    }\n  },\n  components: {\n    obavijest: Obavijest\n  },\n  methods: {\n    dohvatiTroskove () {\n      const path = 'http://localhost:5000/troskovi'\n      axios.get(path)\n        .then((response) => {\n          this.troskovi = response.data.troskovi\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    },\n    dodajTrosak (noviTrosak) {\n      const path = 'http://localhost:5000/troskovi'\n      axios.post(path, noviTrosak)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Dodan trosak'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          console.log(error)\n          this.dohvatiTroskove()\n        })\n    },\n\n    promjenaTroska (trosak) {\n      this.izmjTrosakForm = trosak\n      this.izmjTrosakForm.id = trosak.id\n    },\n\n    initForm () {\n      this.dodajTrosakForm.naziv = ''\n      this.dodajTrosakForm.kategorija = ''\n      this.dodajTrosakForm.iznos = ''\n      this.izmjTrosakForm.id = ''\n      this.izmjTrosakForm.naziv = ''\n      this.izmjTrosakForm.kategorija = ''\n      this.izmjTrosakForm.iznos = ''\n    },\n    onSubmit (evt) {\n      evt.preventDefault()\n      this.$refs.dodajTrosakModal.hide()\n      const noviTrosak = {\n        naziv: this.dodajTrosakForm.naziv,\n        kategorija: this.dodajTrosakForm.kategorija,\n        iznos: this.dodajTrosakForm.iznos\n      }\n      this.dodajTrosak(noviTrosak)\n      this.initForm()\n    },\n    onReset (evt) {\n      evt.preventDefault()\n      this.$refs.dodajTrosakModal.hide()\n      this.initForm()\n    },\n\n    onSubmitUpdate (evt) {\n      evt.preventDefault()\n      this.$refs.izmjTroskaModal.hide()\n      const noviTrosak = {\n        id: this.izmjTrosakForm.id,\n        naziv: this.izmjTrosakForm.naziv,\n        kategorija: this.izmjTrosakForm.kategorija,\n        iznos: this.izmjTrosakForm.iznos\n      }\n      this.zamjeniTrosak(noviTrosak, this.izmjTrosakForm.id)\n    },\n\n    onResetUpdate (evt) {\n      evt.preventDefault()\n      this.$refs.izmjTroskaModal.hide()\n      this.initForm()\n      this.dohvatiTroskove() // why?\n    },\n\n    zamjeniTrosak (noviTrosak, trosakID) {\n      const path = `http://localhost:5000/troskovi/${trosakID}`\n      axios.put(path, noviTrosak)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Trosak izmijenjen'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error)\n          this.dohvatiTroskove()\n        })\n    },\n\n    izbrisiTrosak (trosakID) {\n      const path = `http://localhost:5000/troskovi/${trosakID}`\n      axios.delete(path)\n        .then(() => {\n          this.dohvatiTroskove()\n          this.message = 'Trosak izbrisan!'\n          this.showMessage = true\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error)\n          this.dohvatiTroskove()\n        })\n    },\n    onIzbrisiTrosak (trosak) {\n      this.izbrisiTrosak(trosak.id)\n    }\n  },\n  created () {\n    this.dohvatiTroskove()\n  }\n}\n</script>\n\n<style>\n  .container{\n    text-align: left;\n  }\n  .formaUnos{\n    text-align: left;\n  }\n</style>\n"]}]}